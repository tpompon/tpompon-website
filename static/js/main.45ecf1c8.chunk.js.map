{"version":3,"sources":["components/Card.js","App.js","serviceWorker.js","index.js"],"names":["Card","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","_this$props","title","link","github","picture","desc","react_default","a","createElement","className","href","target","src","process","alt","index_esm","style","color","marginTop","React","Component","App","pic","createRef","isLoading","current","ondragstart","setState","alert","fontSize","fi_index_esm","ref","components_Card","fa_index_esm","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.45ecf1c8.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport '../App.css'\r\n\r\nimport { GoMarkGithub } from \"react-icons/go\";\r\n\r\nclass Card extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { title, link, github, picture, desc } = this.props;\r\n    return (\r\n      <a className=\"card\" href={ link } target=\"_blank\">\r\n        <img className=\"card-pic\" src={ process.env.PUBLIC_URL + '/projects-thumbs/' + picture } alt=\"Screenshot\" />\r\n        <div className=\"card-body\">\r\n          <div className=\"row\">\r\n            <h3 className=\"card-title\">{ title }</h3>\r\n            <a href={ github } target=\"_blank\"><GoMarkGithub className=\"github-logo\" style={{ color: 'black', marginTop: 7 }} /></a>\r\n          </div>\r\n          <div className=\"card-desc\">{ desc }</div>\r\n        </div>\r\n      </a>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Card\r\n","import React from 'react';\nimport './reset.css';\nimport './App.css';\n\nimport Card from './components/Card'\n\nimport { FiMail, FiHeart } from 'react-icons/fi';\nimport { FaLinkedinIn, FaTwitter, FaGithub } from 'react-icons/fa';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.pic = React.createRef();\n    this.state = { isLoading: true }\n  }\n\n  componentDidMount() {\n    const pic = this.pic.current;\n    pic.ondragstart = () => { return false; };\n    this.setState({ isLoading: false });\n    alert('Loaded');\n  }\n\n  render () {\n    const isLoading = this.state.isLoading;\n    return (\n      <div>\n        {isLoading ? (\n          <div style={{ color: 'black', fontSize: '50px' }}>\n            Loading...\n          </div>\n        ) : (\n          <div className=\"app\">\n            <div className=\"contact\">Contact me</div>\n            <div className=\"contact-small\"><FiMail style={{ marginTop: 6 }} /></div>\n            <img className=\"pic\" src={ process.env.PUBLIC_URL + '/me.png' } ref={this.pic} />\n            <h1 className=\"name\">Thomas Pompon</h1>\n            <h2 className=\"bio\">20 ans, Étudiant à <a className=\"italic\" href=\"https://42.fr/\" target=\"_blank\">42</a> - Paris</h2>\n            <div className=\"cards-wrap\">\n              <div className=\"row-cards\">\n                <Card\n                  title=\"Twitter Messages\"\n                  link=\"https://tpompon.github.io/twitter-messages/\"\n                  github=\"https://github.com/tpompon/twitter-messages\"\n                  picture=\"twitter-messages.png\"\n                  desc=\"A simple front app clone of Twitter Inbox\"\n                />\n                <Card\n                  title=\"Projet\"\n                  picture=\"bg.jpg\"\n                  desc=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\"\n                />\n                <Card\n                  title=\"Projet\"\n                  picture=\"bg.jpg\"\n                  desc=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\"\n                />\n              </div>\n              <div className=\"row-cards\">\n                <Card\n                  title=\"Projet\"\n                  picture=\"bg.jpg\"\n                  desc=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\"\n                />\n                <Card\n                  title=\"Projet\"\n                  picture=\"bg.jpg\"\n                  desc=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\"\n                />\n                <Card\n                  title=\"Projet\"\n                  picture=\"bg.jpg\"\n                  desc=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\"\n                />\n              </div>\n              <div className=\"row-cards\">\n                <Card\n                  title=\"Projet\"\n                  picture=\"bg.jpg\"\n                  desc=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\"\n                />\n                <Card\n                  title=\"Projet\"\n                  picture=\"bg.jpg\"\n                  desc=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\"\n                />\n                <Card\n                  title=\"Projet\"\n                  picture=\"bg.jpg\"\n                  desc=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\"\n                />\n              </div>\n            </div>\n            <footer>\n              Made with <FiHeart style={{ color: 'crimson' }} /> using <a className=\"italic\" href=\"http://reactjs.org\" target=\"_blank\">React.js</a>\n              <div style={{ marginTop: 30 }}>\n                <a href=\"https://twitter.com/_Tospik\" target=\"_blank\" className=\"social-icon\"><FaTwitter /></a>\n                <a href=\"https://linkedin.com/in/thomaspompon/\" target=\"_blank\" className=\"social-icon\"><FaLinkedinIn /></a>\n                <a href=\"https://github.com/tpompon/\" target=\"_blank\" className=\"social-icon\"><FaGithub /></a>\n              </div>\n            </footer>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}